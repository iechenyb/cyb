var myreg = /^(((13[0-9]{1})|(15[0-9]{1})|(18[0-9]{1}))+\d{8})$/;
//校验手机号码
function isMobil(s) {
try{
   if(!myreg.test(s)) 
   { 
    return false; }
  }catch(e){
    return false;
  } 
    return true;
}

console.log(isMobil(13938469072));
console.log(isMobil(19938469072));
console.log(isMobil(18738469072));
console.log(isMobil(13938469072));
console.log(isMobil('13938469072p'));//false


function isEmail(str){
  var re=/^\w+((-\w+)|(\.\w+))*\@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+$/;
  if (re.test(str) != true) {
    return false;
  }else{
    return true;
  }
}

function isValidLength(chars, len) {
  if (chars.length < len) {
    return false;
  }
  return true;
}
//整数或者小数
function isValidDecimal( chars ) {
  var re=/^\d*\.?\d{1,2}$/;
  if (chars.match(re) == null)
    return false;
  else
    return true;
}

function isValidDecimal( val) {
  var re=/^\d*\.?\d{1,8}$/;
  if (!re.test(val))
    return false;
  else
    return true;
}
console.log(isValidDecimal('4563.125'));
console.log(isValidDecimal(4563.));
console.log(isValidDecimal(4563.));
console.log(isValidDecimal(4563));
//整数
function isNumber( chars ) {
  var re=/^\d*$/;
  if (chars.match(re) == null)
    return false;
  else
    return true;
}

function isLetters( str ){
  var re=/^[A-Za-z]+$/;
  if (str.match(re) == null)
    return false;
  else
    return true;
}
//邮政编码
function isValidPost( chars ) {
  var re=/^\d{6}$/;
  if (chars.match(re) == null)
    return false;
  else
    return true;
}
function isNULL( exp) {
 if (!exp || typeof(exp)=="undefined" || exp=='') 
{ 
return true;
}　
return false;
}
var aaa;
console.log(isNULL('undefined'));
console.log(isNULL(undefined));
console.log(isNULL(''));
console.log(isNULL());
console.log(isNULL(null));
console.log(isNULL(aaa)+'->'+aaa);
console.log(isNULL('aaaa'));

function CheckSocialCreditCode(Code) {
  var patrn = /^[0-9A-Z]+$/;
  //18位校验及大写校验
  if ((Code.length != 18) || (patrn.test(Code) == false)) {
    console.info("不是有效的统一社会信用编码！");
    return false;
  }
  else {
    var Ancode;//统一社会信用代码的每一个值
    var Ancodevalue;//统一社会信用代码每一个值的权重 
    var total = 0;
    var weightedfactors = [1, 3, 9, 27, 19, 26, 16, 17, 20, 29, 25, 13, 8, 24, 10, 30, 28];//加权因子 
    var str = '0123456789ABCDEFGHJKLMNPQRTUWXY';
    //不用I、O、S、V、Z 
    for (var i = 0; i < Code.length - 1; i++) {
      Ancode = Code.substring(i, i + 1);
      Ancodevalue = str.indexOf(Ancode);
      total = total + Ancodevalue * weightedfactors[i];
      //权重与加权因子相乘之和 
    }
    var logiccheckcode = 31 - total % 31;
    if (logiccheckcode == 31) {
      logiccheckcode = 0;
    }
    var Str = "0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,J,K,L,M,N,P,Q,R,T,U,W,X,Y";
    var Array_Str = Str.split(',');
    logiccheckcode = Array_Str[logiccheckcode];
 
 
    var checkcode = Code.substring(17, 18);
    if (logiccheckcode != checkcode) {
      console.info("不是有效的统一社会信用编码！");
      return false;
    }else{
      console.info("yes");
    }
    return true;
  }
　}
东阳市吴宁澜春服装店  92330783MA29QJ0F5X 
叠彩区宇凯日用品店   92450303MA5MXE8R6J 
德江县凤娟粉馆      92520626MA6GJ0T945 
郸城县世晨家庭农场   92411625MA44MN57X7 
朝阳区大鹏锡纸饭店   92220104MA14XX328N
//匹配国内电话号码(0511-4405222 或 021-87888822)
function istell(str)
{
var result=str.match(/\d{3}-\d{8}|\d{4}-\d{7}/);
if(result==null) return false;
return true;
}


function IdCodeValid(code){  
    //身份证号合法性验证  
    //支持15位和18位身份证号  
    //支持地址编码、出生日期、校验位验证  
    var city={11:"北京",12:"天津",13:"河北",14:"山西",15:"内蒙古",21:"辽宁",22:"吉林",23:"黑龙江 ",31:"上海",32:"江苏",33:"浙江",34:"安徽",35:"福建",36:"江西",37:"山东",41:"河南",42:"湖北 ",43:"湖南",44:"广东",45:"广西",46:"海南",50:"重庆",51:"四川",52:"贵州",53:"云南",54:"西藏 ",61:"陕西",62:"甘肃",63:"青海",64:"宁夏",65:"新疆",71:"台湾",81:"香港",82:"澳门",91:"国外 "};  
    var row = true;
    var msg = "验证成功";
   	
    if(!code || !/^\d{6}(18|19|20)?\d{2}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])\d{3}(\d|[xX])$/.test(code)){  
        row=false,  
       msg = "被保人身份证号格式错误"; 
    }else if(!city[code.substr(0,2)]){  
         row=false,  
       msg = "被保人身份证号地址编码错误";
    }else{  
        //18位身份证需要验证最后一位校验位  
        if(code.length == 18){  
            code = code.split('');  
            //∑(ai×Wi)(mod 11)  
            //加权因子  
            var factor = [ 7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2 ];  
            //校验位  
            var parity = [ 1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2 ];  
            var sum = 0;  
            var ai = 0;  
            var wi = 0;  
            for (var i = 0; i < 17; i++)  
            {  
                ai = code[i];  
                wi = factor[i];  
                sum += ai * wi;  
            }  
            if(parity[sum % 11] != code[17].toUpperCase()){  
                 row=false,  
       			msg = "被保人身份证号校验位错误";
            }  
        }  
    }  
    return row;  
} 
var aaa;
console.log(IdCodeValid('411522198906013019'));
console.log(IdCodeValid('411522198906043016'));
console.log(IdCodeValid('411522205906413019'));
console.log(IdCodeValid('41152220591501301X'));

function luhnCheck(bankno) {
var lastNum = bankno.substr(bankno.length - 1, 1); //取出最后一位（与luhn进行比较）
var first15Num = bankno.substr(0, bankno.length - 1); //前15或18位
var newArr = new Array();
for (var i = first15Num.length - 1; i > -1; i--) { //前15或18位倒序存进数组
newArr.push(first15Num.substr(i, 1));
}
var arrJiShu = new Array(); //奇数位*2的积 <9
var arrJiShu2 = new Array(); //奇数位*2的积 >9
var arrOuShu = new Array(); //偶数位数组
for (var j = 0; j < newArr.length; j++) {
if ((j + 1) % 2 == 1) { //奇数位
    if (parseInt(newArr[j]) * 2 < 9) arrJiShu.push(parseInt(newArr[j]) * 2);
   else arrJiShu2.push(parseInt(newArr[j]) * 2);
} else //偶数位
    arrOuShu.push(newArr[j]);
}

var jishu_child1 = new Array(); //奇数位*2 >9 的分割之后的数组个位数
var jishu_child2 = new Array(); //奇数位*2 >9 的分割之后的数组十位数
for (var h = 0; h < arrJiShu2.length; h++) {
    jishu_child1.push(parseInt(arrJiShu2[h]) % 10);
    jishu_child2.push(parseInt(arrJiShu2[h]) / 10);
}

var sumJiShu = 0; //奇数位*2 < 9 的数组之和
var sumOuShu = 0; //偶数位数组之和
var sumJiShuChild1 = 0; //奇数位*2 >9 的分割之后的数组个位数之和
var sumJiShuChild2 = 0; //奇数位*2 >9 的分割之后的数组十位数之和
var sumTotal = 0;
for (var m = 0; m < arrJiShu.length; m++) {
    sumJiShu = sumJiShu + parseInt(arrJiShu[m]);
}

for (var n = 0; n < arrOuShu.length; n++) {
    sumOuShu = sumOuShu + parseInt(arrOuShu[n]);
}

for (var p = 0; p < jishu_child1.length; p++) {
    sumJiShuChild1 = sumJiShuChild1 + parseInt(jishu_child1[p]);
    sumJiShuChild2 = sumJiShuChild2 + parseInt(jishu_child2[p]);
}
//计算总和
sumTotal = parseInt(sumJiShu) + parseInt(sumOuShu) + parseInt(sumJiShuChild1) + parseInt(sumJiShuChild2);

//计算luhn值
var k = parseInt(sumTotal) % 10 == 0 ? 10 : parseInt(sumTotal) % 10;
var luhn = 10 - k;

if (lastNum == luhn) {
　return true;
    } else {
         return false;
    }
}